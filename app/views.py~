"""
Rec-Sys is a login based database system implementing the recommendation system
for searching of Documents
"""

# all the imports
from flask import render_template, flash, redirect, session, url_for, request, g
from flask.ext.login import login_user, logout_user, current_user, login_required
from app import app, db, lm
from .forms import LoginForm, SearchForm
from .models import User, Document
from .search import Search
from .recsys import RecSys
import bcrypt

doc = None

@lm.user_loader
def load_user(id):
    """Given *user_id*, return the associated User object.
    :param unicode user_id: user_id (username) user to retrieve
    """
    return User.query.get(int(id))

@app.before_request
def before_request():
    g.user = current_user

@app.route("/login", methods=["GET", "POST"])
def login():
    """For GET requests, display the login form. For POSTS, login the current user
    by processing the form."""
    if g.user is not None and g.user.is_authenticated():
        return redirect(url_for('database'))
    form = LoginForm()
    if form.validate_on_submit():
        user = User.query.filter_by(username=form.username.data).first()
        if user:
            if bcrypt.hashpw(form.password.data, user.password) == user.password:
                user.authenticated = True
                db.session.add(user)
                db.session.commit()
                login_user(user, remember=True)
                return redirect(url_for("database")) #or request.args.get('next')
    return render_template("login.html", form=form)

@app.route("/profile")
@login_required
def profile():
	"""shows logged in user's details"""
	global doc
	g.user = current_user
    return render_template("profile.html", user=g.user, doc=doc)


@app.route("/logout", methods=["GET"])
@login_required
def logout():
    """Logout the current user."""
    user = current_user
    user.authenticated = False
    db.session.add(user)
    db.session.commit()
    logout_user()
    form = LoginForm()
    return redirect(url_for('login'))

@app.route('/about')
def about():
    """the About page"""
    return render_template('about.html')

@app.route('/')
def index():
    """Index Redirect Page"""
    return redirect(url_for('login'))

@app.route('/database', methods=['GET', 'POST'])
@login_required
def database():
    """For GET requests, display the database search form. For POSTS, dearch the database 
    for the given search term."""
    form = SearchForm()
    rec = RecSys(g.user,doc)
    if form.validate_on_submit():
        searchterm =  form.searchterm.data
        result = Search(searchterm)
        return render_template("database.html", form=form, doc=result, rec=rec)
    return render_template("database.html", form=form, doc=None, rec=rec)

@app.route('/document/<name>')
@login_required
def document(name):
    """Document View Page"""
    global doc
    doc = Document.query.filter_by(title=name).first()
    return render_template("document.html", doc=doc)


@app.errorhandler(404)
def page_not_found(error):
    """redirect wrongs urls to login or database"""
    return redirect(url_for('index'))

if __name__ == '__main__':
	app.run()

